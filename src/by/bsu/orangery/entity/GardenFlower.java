//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.09 at 02:58:08 PM MSK 
//


package by.bsu.orangery.entity;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for GardenFlower complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GardenFlower">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.example.com/flowers}Flower">
 *       &lt;sequence>
 *         &lt;element name="growing-tips" type="{http://www.example.com/flowers}Growing"/>
 *         &lt;element name="multiplying" type="{http://www.example.com/flowers}Multiplying"/>
 *       &lt;/sequence>
 *       &lt;attribute name="soil" default="dirt">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="dirt"/>
 *             &lt;enumeration value="podzolic"/>
 *             &lt;enumeration value="sod-podzolic"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GardenFlower", propOrder = {
    "growingTips",
    "multiplying"
})
public class GardenFlower
    extends Flower
{

    @XmlElement(name = "growing-tips", required = true)
    protected Growing growingTips;
    @XmlElement(required = true)
    @XmlSchemaType(name = "string")
    protected Multiplying multiplying;
    @XmlAttribute(name = "soil")
    protected String soil;

    /**
     * Gets the value of the growingTips property.
     * 
     * @return
     *     possible object is
     *     {@link Growing }
     *     
     */
    public Growing getGrowingTips() {
        return growingTips;
    }

    /**
     * Sets the value of the growingTips property.
     * 
     * @param value
     *     allowed object is
     *     {@link Growing }
     *     
     */
    public void setGrowingTips(Growing value) {
        this.growingTips = value;
    }

    /**
     * Gets the value of the multiplying property.
     * 
     * @return
     *     possible object is
     *     {@link Multiplying }
     *     
     */
    public Multiplying getMultiplying() {
        return multiplying;
    }

    /**
     * Sets the value of the multiplying property.
     * 
     * @param value
     *     allowed object is
     *     {@link Multiplying }
     *     
     */
    public void setMultiplying(Multiplying value) {
        this.multiplying = value;
    }

    /**
     * Gets the value of the soil property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSoil() {
        if (soil == null) {
            return "dirt";
        } else {
            return soil;
        }
    }

    /**
     * Sets the value of the soil property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSoil(String value) {
        this.soil = value;
    }

    @Override
    public String toString() {
        return "\n-------------------\n" +
                "GardenFlower{\n" +
                "ID=" + super.getId() + "\n" +
                "Name=" + super.getName() + "\n" +
                "Origin=" + super.getOrigin() + "\n" +
                "Soil=" + soil + "\n" +
                "Stem Color=" + super.getVisualParameters().getStemColor() + "\n" +
                "Leaf Color=" + super.getVisualParameters().getLeafColor() + "\n" +
                "Plant Size=" + super.getVisualParameters().getPlantSize() + "\n" +
                "Temperature=" + getGrowingTips().getTemperature() + "\n" +
                "Watering=" + getGrowingTips().getWatering() + "\n" +
                "Multiplying=" + multiplying + "\n" +
                '}' +
                "\n-------------------\n";
    }
}
