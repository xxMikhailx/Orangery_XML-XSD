//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.09 at 02:58:08 PM MSK 
//


package by.bsu.orangery.entity;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.example.flowers package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _GardenFlower_QNAME = new QName("http://www.example.com/flowers", "garden-flower");
    private final static QName _Flower_QNAME = new QName("http://www.example.com/flowers", "flower");
    private final static QName _CutFlower_QNAME = new QName("http://www.example.com/flowers", "cut-flower");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.example.flowers
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Flowers }
     * 
     */
    public Flowers createFlowers() {
        return new Flowers();
    }

    /**
     * Create an instance of {@link Flower }
     * 
     */
    public Flower createFlower() {
        return new Flower();
    }

    /**
     * Create an instance of {@link CutFlower }
     * 
     */
    public CutFlower createCutFlower() {
        return new CutFlower();
    }

    /**
     * Create an instance of {@link GardenFlower }
     * 
     */
    public GardenFlower createGardenFlower() {
        return new GardenFlower();
    }

    /**
     * Create an instance of {@link Growing }
     * 
     */
    public Growing createGrowing() {
        return new Growing();
    }

    /**
     * Create an instance of {@link Visual }
     * 
     */
    public Visual createVisual() {
        return new Visual();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GardenFlower }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.example.com/flowers", name = "garden-flower", substitutionHeadNamespace = "http://www.example.com/flowers", substitutionHeadName = "flower")
    public JAXBElement<GardenFlower> createGardenFlower(GardenFlower value) {
        return new JAXBElement<GardenFlower>(_GardenFlower_QNAME, GardenFlower.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Flower }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.example.com/flowers", name = "flower")
    public JAXBElement<Flower> createFlower(Flower value) {
        return new JAXBElement<Flower>(_Flower_QNAME, Flower.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CutFlower }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.example.com/flowers", name = "cut-flower", substitutionHeadNamespace = "http://www.example.com/flowers", substitutionHeadName = "flower")
    public JAXBElement<CutFlower> createCutFlower(CutFlower value) {
        return new JAXBElement<CutFlower>(_CutFlower_QNAME, CutFlower.class, null, value);
    }

}
